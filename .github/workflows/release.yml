name: Release Build

on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:

jobs:
    build:
        name: Build (${{ matrix.platform }})
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    -   platform: x86_64-linux
                        os: ubuntu-latest
                    -   platform: aarch64-linux
                        os: ubuntu-latest
                    -   platform: x86_64-darwin
                        os: macos-latest
                    -   platform: aarch64-darwin
                        os: macos-latest

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Install Nix
                uses: DeterminateSystems/nix-installer-action@main

            -   name: Set up Nix cache
                uses: DeterminateSystems/magic-nix-cache-action@main

            -   name: Build using Nix
                run: |
                    nix build .#packages.${{ matrix.platform }}.default
                    
                    # 准备发布文件
                    mkdir -p dist
                    cp result/bin/* dist/
                    cp README.md LICENSE dist/ || true
                    
                    cd dist
                    tar czf ../char-cloud-${{ matrix.platform }}.tar.gz *
                    cd ..

            -   name: Upload artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: char-cloud-${{ matrix.platform }}
                    path: char-cloud-${{ matrix.platform }}.tar.gz
                    retention-days: 5

    release:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/')

        steps:
            -   name: Download artifacts
                uses: actions/download-artifact@v4
                with:
                    path: artifacts

            -   name: Generate checksums
                run: |
                    cd artifacts
                    for file in */*; do
                      sha256sum "$file" > "${file}.sha256"
                    done

            -   name: Create Release
                uses: softprops/action-gh-release@v1
                with:
                    files: |
                        artifacts/**/*
                    draft: false
                    generate_release_notes: true
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}